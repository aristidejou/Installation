***********Installation
master medium
run this on both--master and slave

sudo su
apt-get update
apt-get install docker.io -y
apt-get update && apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
//run this one by one
cat <<EOF > /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

apt-get update
apt install kubeadm=1.21.0-00 kubectl=1.21.0-00 kubelet=1.21.0-00 -y

Creating cluster // Initializing kubeadm on master using:
kubeadm init --pod-network-cidr=192.168.0.0/16

Copy the Join token and paste in the worker machine

// We need to run the below commands on the Master:
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

//To list all nodes :
kubectl get nodes

//It shows the nodes but the status is not ready because we have not install the network plugin.
//To install network plugin run the below commands:
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml

//Check the nodes for its state after installing network plugins.
kubectl get nodes
kubectl get pods --all-namespaces

//Thus, we have successfully installed Kubernetes. Run the below command to create a dashboard
kubectl apply -f
https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml
//Then edit the service:
kubectl edit service kubernetes-dashboard -n kubernetes-dashboard
//Note: We need to change the type from ClusterIP to NodePort, the below given image contains the modified service file.
kubectl get svc -n kubernetes-dashboard
Now go to a browser and paste the ip along with the port: https://ip@master:31707
advanced, proceed,token ,
kubectl create serviceaccount cluster-admin-dashboard-sa

kubectl create clusterrolebinding cluster-admin-dashboard-sa \ --clusterrole=cluster-admin \ --serviceaccount=default:cluster-admin-dashboard-sa
TOKEN=$(kubectl describe secret $(kubectl -n kube-system get secret | awk '/^clusteradmin-dashboardsa-token-/{print $1}') | awk '$1=="token:"{print $2}')
echo $TOKEN

Copy the token and paste in the Kubernetes dashboard
